!pip install yfinance
!pip install bs4
!pip install nbformat

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

import warnings
# Ignore all warnings
warnings.filterwarnings("ignore", category=FutureWarning)

def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data.Date <= '2021-06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()

################################################################################################################################################

tesla=yf.Ticker("TSLA")
tesla_data=tesla.history(period='max')
tesla_data.reset_index(inplace=True)
tesla_data.head(5)

url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/revenue.htm'
html_data = requests.get(url).text

soup_1 = BeautifulSoup(html_data,"html.parser")
tesla_revenue = pd.DataFrame(columns=['Date','Revenue'])

table = soup_1.find_all("tbody")[1]
for row in table.find_all('tr'):
    col = row.find_all('td')
    new_row = pd.DataFrame({'Date':[col[0].text],'Revenue':[col[1].text]})
    tesla_revenue = pd.concat([tesla_revenue,new_row],ignore_index=True)

for row in range(0,len(tesla_revenue)):
    tesla_revenue.loc[row,'Revenue'] = tesla_revenue.loc[row,'Revenue'].replace(',',"")
    tesla_revenue.loc[row,'Revenue'] = tesla_revenue.loc[row,'Revenue'].replace('$',"")

tesla_revenue.dropna(inplace=True)
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]

tesla_revenue.tail(5)

################################################################################################################################################

gamestop = yf.Ticker("GME")
gme_data = gamestop.history(period="max")
gme_data.reset_index(inplace=True)
gme_data.head(5)

url = " https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html"
html_data_2  = requests.get(url).text

soup_2 = BeautifulSoup(html_data_2, 'html.parser')
gme_revenue = pd.DataFrame(columns=['Date','Revenue'])

table2 = soup_2.find_all('tbody')[1]
for row in table2.find_all('tr'):
    col = row.find_all('td')
    new_row = pd.DataFrame({'Date':[col[0].text],'Revenue':[col[1].text]})
    gme_revenue = pd.concat([gme_revenue,new_row],ignore_index=True)

for row in range(0,len(gme_revenue)):
    gme_revenue.loc[row,'Revenue'] = gme_revenue.loc[row,'Revenue'].replace(',',"")
    gme_revenue.loc[row,'Revenue'] = gme_revenue.loc[row,'Revenue'].replace('$',"")

gme_revenue.tail(5)

################################################################################################################################################

make_graph(tesla_data, tesla_revenue, 'Tesla')
make_graph(gme_data, gme_revenue, 'GameStop')
